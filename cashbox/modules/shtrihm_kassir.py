# coding=utf-8
__author__ = 'wf'


class CashboxSettings:
    """
    Класс для констант кассовой программы Штрих-М
    """

    def __init__(self, constants_dict=0):
        if constants_dict:
            self.constant_dict = constants_dict
        else:
            self.constants_dict = {
                # Основные
                'ККМПоУмолчанию': '1',
                'СекцияПоУмолчанию': '1',
                'ВыборСекции': '0',
                # Вид чека
                'ПечататьИмяКассира': '0',
                'ПечататьНумерациюПозиций': '1',
                'ПечататьОтступ': '1',
                'ОднаСтрокаНаПРодажу': '0',
                'ПечататьКредитнуюКарту': '0',
                'ПечататьПодытогПриСкидкеНадбавкеНаЧек': '0',
                'ПечататьНаименованиеТовара': '1',
                'ПереноситьДлинныеНазванияТоваров': '1',
                'ПечататьКодТовара': '1',
                'ПечататьЦифрыШтрихКодаТовара': '1',
                'ПечататьШтрихКодЕАН': '1',
                'ПечататьНазваниеСкидокНадбавок': '0',
                'ПечататьРазделительМеждуПродажами': '1',
                # Режим 1
                'РазрешитьБлокировкуРабочегоМеста': '0',
                'РазрешитьСменуПользователяПриБлокировке': '0',
                'АвторизацияПослеКаждогоЧека': '0',
                'ВыгружатьПродажиПриZОтчете': '0',
                'ПодаватьНаККМЗвуковойСигналПриОшибке': '0',
                'ИгнорироватьТочкуВКоличестве': '0',
                'ИгнорироватьТочкуВСумме': '0',
                'СоздаватьТоварыПриВозврате': '0',
                # Режим 2
                'ЗапретитьПродажиПоНулевойЦене': '0',
                'ЗапретитьОплатуБезВводаСуммы': '0',
                'КонтрольПродажиДробногоКоличества': '0',
                'ЗапретитьОтрицательныеОстатки': '0',
                'ДополнятьШтрихКодНулямиДо13Знаков': '1',
                'ВыбиратьЕдиницуПриРегистрацииПоКоду': '0',
                'ЗапрашиватьКоличествоПриПодборе': '0',
                'РазделятьТриады': '1',
                'ЗапретитьВводКоличества': '0',
                # Режим 3
                'РазрешитьПродажуПоСвободнойЦене': '1',
                'ЗапретитьЗакрытиеНулевогоЧека': '0',
                # Дополнительные
                'РазрешитьВидОплаты2': '0',
                'НазваниеВидаОплаты2': '',
                'РазрешитьВидОплаты3': '0',
                'НазваниеВидаОплаты3': '',
                'РазрешитьВидОплаты4': '0',
                'НазваниеВидаОплаты4': '',
                'ПечататьШтрихКодЧека': '0',
                'ПрефиксШтрихКодаЧека': '',
                'ВыборПлатежнойКартыПриОплате': '0',
                # Обмен
                'СпособОбменаДанными': '0',
                'ВремяВозобновленияСвязи': '0',
                'АвтоматическаяЗагрузка': '0',
                'АвтоматическаяВыгрузка': '0',
                'ИмяФлагаЗагрузки': '',
                'ИмяФлагаВыгрузки': '',
                'ИмяФайлаСправочника': '',
                'ИмяФайлаОтчета': '',
                'ЗапросРеквизитов': '',
                'ИмяФайлаЗапросаРеквизитов': '',
                'ИмяФайлаВыгрузкиРеквизитов': '',
                # Оборудование. Настраивается локально.
                # 'ИспользоватьККМ': '',
                # 'ТипСканера': '',
                # 'РаботаСДисплеем': '',
                # 'ТипДисплея': '',
                # 'СтрокаПриПростое1': '',
                # 'СтрокаПриПростое2': '',
                # 'ИнтервалСтрокиПриПростое': '',
                # 'СообщениеВНерабочемСостоянии1': '',
                # 'СообщениеВНерабочемСостоянии2': '',
                # 'ВыводитьПромИтогНаДисплей': '',
                # 'РаботаСВесами': '',
                # На данный момент неиспользуется
                # Скидки
                # 'МаксПроцентнаяСкидкаНаПозицию': '',
                # 'МаксПроцентнаяНадбавкаНаПозицию': '',
                # 'МаксСуммоваяСкидкаНаПозицию': '',
                # 'МаксСуммоваяНадбавкаНаПозицию': '',
                # 'МаксПроцентнаяСкидкаНаЧек': '',
                # 'МаксПроцентнаяНадбавкаНаЧек': '',
                # 'МаксСуммоваяСкидкаНаЧек': '',
                # 'МаксСуммоваяНадбавкаНаЧек': '',
                # 'РазрешитьАвтоматическиеСкидки': '',
                # 'АвтоматическаяСкидкаНаПозицию': '',
                # 'АвтоматическаяСкидкаНаЧек': '',
                # 'РазрешитьФиксированныеСкидки': '',
                # 'РазрешитьНакопительныеСкидки': '',
                # 'ОбъединениеСкидокНаЧек': '',
                # Работа с картами
                # 'АвтоматическаяСкидкаНаКарту': '',
                # 'УчитыватьСуммуТекущегоЧека': '',
                # 'ВестиУчетКредитаПоКартам': '',
                # 'КонтрольКредита': '',
                # 'ПоказыватьРеквизитыКарты': '',
                # 'СпособВыбораПлатежнойКарты': '',
                # Налоги
                # 'ИспользоватьНалоги': '',
                # 'НалоговаяСхемаПоУмолчанию': '',
                # Продавцы
                'ОбязательныйВыборПродавца': '0',
                'СпособВыбораПродавца': '0',
                'ВыбиратьПродавца': '0',
            }

    def fromtext(self, textconstants):
        """
        загрузка настроек из текстового поля
        :param textconstants: текстовое поле настроек
        :return:
        """
        for line in textconstants.splitlines():
            if line:
                if line[0] == '|':
                    constant, value = line[1:].split('=')
                    self.constants_dict[constant.strip()] = value.strip()

    def fulltotext(self):
        """
        :return: текстовое представление всех настроек
        """
        textconstants = ''
        for key in self.constants_dict.keys():
            textconstants += "|%(key)s=%(value)s\n" % {'key': key, 'value': self.constants_dict[key]}
        return textconstants

    def keytotext(self, key):
        """
        :param key:
        :return: текстовое представление настроек по ключу
        """
        try:
            return "|%(key)s=%(value)s\n" % {'key': key, 'value': self.constants_dict[key]}
        except IndexError:
            print("Нет такой константы")

    def keys(self):
        """
        :return: возвращает ключи настроек
        """
        return self.constants_dict.keys()


class CashboxPermission:
    def __init__(self):

    def permissiontotext(group):


def usertotext(user):
    return '&%(id)s;%(name)s;%(permission_id)s;%(passwd)s;%(ico)s;%(card)s' % \
           {'id': user.id,
            'name': user.name,
            'permission_id': user.group.id,
            'passwd': user.passwd,
            'ico': '',
            'card': ''}


def main():
    print("Используется только как модуль")


if __name__ == "__main__":
    main()
